<p>Our simple web site will have only two pages - one to generate the Fibonacci number sequence and a help page.</p>
<p>Although we could create all the required files manually, we'll save a bit of work by using the Woof! stubs generator. If you are using BowWow,</p>
[my _code_sample {
C:\bowwow> bowwow stubs url fibonacci/generate fibonacci/help
Controller FibonacciController:
         File app/controllers/fibonacci_controller.tcl will be created.
         Class FibonacciController will be created.
         Methods to be added: generate, help.
         View stubs to be added:
                app/controllers/views/fibonacci-generate-main.wtf
                app/controllers/views/fibonacci-help-main.wtf
Do you want to continue? [YN] y
}]
<p>Using Woof! with other web servers, the equivalent command would be</p>
[my _code_sample {
C:\bowwow> tclsh scripts/woofus.tcl stubs url fibonacci/generate fibonacci/help
}]
<p>The command <span class="wf_filename">stubs </span>is used for generating boilerplate stubs for handling requests. The <span class="wf_filename">url </span>parameter indicates that relative URL format will be used to indicate what stubs are to be generated. So the above commands will generate stubs for Web pages that can be accessed through the URL's <span class="wf_filename">http://localhost:8015/fibonacci/generate</span> and <span class="wf_filename">http://localhost:8015/fibonacci/help</span> respectively.</p>
<p>The command will first display the actions it will take in creating the stubs, and then prompt for the go-ahead to actually do so. In this Quick Start chapter, we will ignore the MVC-based naming conventions being used when generating the stubs. It suffices to know that the stub generator will create a class <code>FibonacciController</code> whose methods will be called to handle URL's that are prefixed with <span class="wf_filename">/fibonacci</span>. The stub generator also creates two methods - <code>generate </code>and <code>help </code>- corresponding to the two URL's we specified on the command line.</p>
<p>If you edit the file <span class="wf_filename">app/controllers/fibonacci_controller.tcl</span> under your BowWow directory, you will see the following contents:</p>
[my _code_sample {
    oo::class create FibonacciController {
        superclass ApplicationController
        constructor args {
            # Very important to pass arguments to parent
            next {*}$args
        }
    }
    oo::define FibonacciController {
        method generate {} {
            # Raise an exception that allows woofer to detect unimplemented actions
            ::woof::errors::exception WOOF NotImplemented &quot;Action generate has no supporting implementation.&quot;
        }
        method help {} {
            # Raise an exception that allows woofer to detect unimplemented actions
            ::woof::errors::exception WOOF NotImplemented &quot;Action help has no supporting implementation.&quot;
        }
    }
}]
<p>As you can see, the stubs will generate exceptions if invoked. For example, navigating to <span class="wf_filename">http://localhost:8015/fibonacci/help</span> will result in an error page being displayed in the browser.</p>
