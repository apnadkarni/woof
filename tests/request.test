#
# Copyright (c) 2009, Ashok P. Nadkarni
# All rights reserved.
#
# See the file LICENSE for license

# This file contains tests for the Request object

package require tcltest
package require http
package require tdom

source [file join [file dirname [info script]] config.tcl]
source [file join [file dirname [info script]] testutil.tcl]

::tcltest::customMatch boolean ::woof::test::boolean_compare

namespace eval ::woof::test::request {
    namespace import ::tcltest::test

    namespace path ::woof::test

    namespace upvar ::woof::test test_url test_url
    variable request_dom;      # What we get back in DOM form

    proc request_setup {} {
        variable request_dom
        if {![info exists request_dom]} {
            set tok [http::geturl [make_test_url request]]
            set request_dom [dom parse -keepEmpties -html [http::data $tok]]
            http::cleanup $tok
        }
    }

    proc host_and_port {host port} {
        return [join [concat $host $port] :]
    }
    proc dom_field {id} {
        variable request_dom
        return [[lindex [$request_dom selectNodes "//dd\[@id='$id']"]  0] text]
    }

    foreach {method_name mode expected_value} \
        [list \
             application_url exact $test_url(application_url) \
             delete?         boolean false \
             formatted_host_with_port exact [host_and_port $test_url(host) $test_url(port)] \
             get?            boolean true \
             get_or_head?    boolean true \
             host            exact   $test_url(host) \
             port            exact   $test_url(port) \
             post?           boolean false \
             protocol        exact   $test_url(scheme) \
             query_string    exact   $test_url(query) \
             referer         exact   "" \
             remote_addr     exact   127.0.0.1 \
             request_method  exact   get \
             request_uri     exact   [file join $test_url(application_url) $test_url(test_url_path) request] \
             resource_url    exact   [file join $test_url(test_url_path) request] \
             ssl?            boolean [expr {$test_url(scheme) == "https"}] \
             standard_port   exact   [expr {$test_url(scheme) == "https" ? 443 : 80}] \
             url             exact   [make_test_url request]
            ] { 
                eval [format {
                    test request_%1$s-1.0 {
                        Testing %1$s method in Request object
                    } -setup {
                        request_setup
                    } -body {
                        dom_field "%1$s"
                    } -result "%2$s" -match $mode
                } $method_name $expected_value]
            }
    
    ################################################################

    if {[info exists request_dom]} {
        $request_dom delete
        unset request_dom
    }
    tcltest::cleanupTests
}